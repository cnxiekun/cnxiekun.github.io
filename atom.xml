<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kun&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/b209953f1f4c53ad881b90a773f94992</icon>
  <subtitle>搬砖狗</subtitle>
  <link href="https://cnxiekun.github.io/atom.xml" rel="self"/>
  
  <link href="https://cnxiekun.github.io/"/>
  <updated>2021-07-12T07:17:24.804Z</updated>
  <id>https://cnxiekun.github.io/</id>
  
  <author>
    <name>Kun XIE</name>
    <email>cnxiekun@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>栈</title>
    <link href="https://cnxiekun.github.io/2020/03/11/%E6%A0%88/"/>
    <id>https://cnxiekun.github.io/2020/03/11/%E6%A0%88/</id>
    <published>2020-03-11T02:18:46.000Z</published>
    <updated>2021-07-12T07:17:24.804Z</updated>
    
    <content type="html"><![CDATA[<p><strong>“栈”，类似于一摞叠在一起的盘子。放盘子的时候，从下往上一个一个放；取的时候，也是从上往下一个一个地依次取，不能从中间任意抽出。后进者先出，先进者后出，这就是“栈”的结构。</strong></p><p><img src="/2020/03/11/%E6%A0%88/%E6%A0%88.jpg" alt="栈"></p><span id="more"></span><h2 id="为什么选-栈？"><a href="#为什么选-栈？" class="headerlink" title="为什么选 栈？"></a>为什么选 <code>栈</code>？</h2><p>从栈的操作特性上来看，<strong>栈是一种“操作受限”的线性表</strong>，只允许在一端插入和删除数据。</p><p>从功能上来说，数组或链表可以替代栈，但特定的数据结构是对特定场景的抽象，而且，数组或链表暴露了太多的操作接口，操作上的确灵活自由，但使用时就比较不可控，自然也就更容易出错。当某个数据集合只涉及在一端插入和删除数据，并且满足后进先出、先进后出的特性，应该首选 <code>栈</code> 这种数据结构。</p><h2 id="如何实现-栈？"><a href="#如何实现-栈？" class="headerlink" title="如何实现 栈？"></a>如何实现 <code>栈</code>？</h2><p>栈主要包含两个操作，入栈和出栈，也就是在栈顶插入一个数据和从栈顶删除一个数据。栈既可以用数组来实现，也可以用链表来实现。用数组实现的栈，叫作<strong>顺序栈</strong>，用链表实现的栈，叫作<strong>链式栈</strong>。</p><p>不管是顺序栈还是链式栈，存储数据只需要一个大小为 $n$ 的数组。在入栈和出栈过程中，只需要一两个临时变量存储空间，所以时间、空间复杂度都是 $O(1)$。</p><h2 id="栈在函数调用中的应用"><a href="#栈在函数调用中的应用" class="headerlink" title="栈在函数调用中的应用"></a>栈在函数调用中的应用</h2><p>栈作为一个基础的数据结构，其比较经典的一个应用场景就是<strong>函数调用栈</strong>。</p><p>操作系统给每个线程分配了一块独立的内存空间，这块内存被组织成“栈”这种结构, 用来存储函数调用时的临时变量。每进入一个函数，就会将临时变量作为一个栈帧入栈，当被调用函数执行完成，返回之后，将这个函数对应的栈帧出栈。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    ret = add(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">    res = a + ret</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="built_in">sum</span> = x + y</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br></pre></td></tr></table></figure><p>从上面代码中可以看出，<code>main()</code> 函数调用了 <code>add()</code> 函数，获取计算结果，并且与临时变量 <code>a</code> 相加，最后打印 <code>res</code> 的值。下图中显示的是，在执行到 <code>add()</code> 函数时，函数调用栈的情况。</p><p><img src="/2020/03/11/%E6%A0%88/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8.jpg" alt="函数调用"></p><h2 id="栈在表达式求值中的应用"><a href="#栈在表达式求值中的应用" class="headerlink" title="栈在表达式求值中的应用"></a>栈在表达式求值中的应用</h2><p>栈的另一个常见的应用场景，编译器如何利用栈来实现<strong>表达式求值</strong>。</p><p>编译器通过两个栈来实现的。其中一个保存操作数的栈，另一个是保存运算符的栈。从左向右遍历表达式，当遇到数字，就直接压入操作数栈；当遇到运算符，就与运算符栈的栈顶元素进行比较。</p><p>如果比运算符栈顶元素的优先级高，就将当前运算符压入栈；如果比运算符栈顶元素的优先级低或者相同，从运算符栈中取栈顶运算符，从操作数栈的栈顶取2个操作数，然后进行计算，再把计算完的结果压入操作数栈，继续比较。</p><p>下图表示 $3 + 5 * 8 -6$ 这个表达是的计算过程。</p><p><img src="/2020/03/11/%E6%A0%88/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.jpg" alt="表达式求值"></p><h2 id="栈在括号匹配中的应用"><a href="#栈在括号匹配中的应用" class="headerlink" title="栈在括号匹配中的应用"></a>栈在括号匹配中的应用</h2><p>栈还可以被用来检查表达式中的括号是否匹配。</p><p>假设表达式中只包含三种括号，圆括号 $()$、方括号 $[]$ 和花括号${}$，并且它们可以任意嵌套。比如，${<a href=""></a>[{}]}$ 或 $[{()}([])]$ 等都为合法格式，而 ${[}()]$ 或 $[({)]$ 为不合法的格式。</p><p>这里也可以用栈来解决。用栈来保存未匹配的左括号，从左到右依次扫描字符串。当扫描到左括号时，则将其压入栈中；当扫描到右括号时，从栈顶取出一个左括号。如果能够匹配，比如 “$($” 跟 “$)$” 匹配，“$[$” 跟 “$]$” 匹配，“${$” 跟 “$}$” 匹配，则继续扫描剩下的字符串。如果扫描的过程中，遇到不能配对的右括号，或者栈中没有数据，则说明为非法格式。当所有的括号都扫描完成之后，如果栈为空，则说明字符串为合法格式；否则，说明有未匹配的左括号，为非法格式。</p><h2 id="如何实现浏览器的前进、后退功能？"><a href="#如何实现浏览器的前进、后退功能？" class="headerlink" title="如何实现浏览器的前进、后退功能？"></a>如何实现浏览器的前进、后退功能？</h2><p>使用两个栈，$X$ 和 $Y$，把首次浏览的页面依次压入栈 $X$，当点击后退按钮时，再依次从栈 $X$ 中出栈，并将出栈的数据依次放入栈 $Y$。当点击前进按钮时，依次从栈 $Y$ 中取出数据，放入栈 $X$ 中。当栈 $X$ 中没有数据时，那就说明没有页面可以继续后退浏览了。当栈 $Y$ 中没有数据，那就说明没有页面可以点击前进按钮浏览了。</p><p>例如顺序查看了 $a, b, c$ 三个页面，就依次把 $a, b, c$ 压入栈，这个时候，两个栈的数据就是这个样子：</p><p><img src="/2020/03/11/%E6%A0%88/%E6%B5%8F%E8%A7%88%E5%99%A81.jpg" alt="浏览器1"></p><p>当通过浏览器的后退按钮，从页面 $c$ 后退到页面 $a$ 之后，就依次把 $c$ 和 $b$ 从栈 $X$ 中弹出，并且依次放入到栈 $Y$。这个时候，两个栈的数据就是这个样子：</p><p><img src="/2020/03/11/%E6%A0%88/%E6%B5%8F%E8%A7%88%E5%99%A82.jpg" alt="浏览器2"></p><p>这个时候又想看页面 $b$，点击前进按钮回到 $b$ 页面，就把 $b$ 再从栈 $Y$ 中出栈，放入栈 $X$ 中。此时两个栈的数据是这个样子：</p><p><img src="/2020/03/11/%E6%A0%88/%E6%B5%8F%E8%A7%88%E5%99%A83.jpg" alt="浏览器3"></p><p>这个时候，通过页面 $b$ 又跳转到新的页面 $d$ 了，页面 $c$ 就无法再通过前进、后退按钮重复查看了，所以需要清空栈 $Y$。此时两个栈的数据这个样子：</p><p><img src="/2020/03/11/%E6%A0%88/%E6%B5%8F%E8%A7%88%E5%99%A84.jpg" alt="浏览器4"></p><blockquote><p>参考资料：<a href="https://time.geekbang.org/column/article/41222">王争——栈：如何实现浏览器的前进和后退功能？</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;“栈”，类似于一摞叠在一起的盘子。放盘子的时候，从下往上一个一个放；取的时候，也是从上往下一个一个地依次取，不能从中间任意抽出。后进者先出，先进者后出，这就是“栈”的结构。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/11/%E6%A0%88/%E6%A0%88.jpg&quot; alt=&quot;栈&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://cnxiekun.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="栈" scheme="https://cnxiekun.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>集成学习对比</title>
    <link href="https://cnxiekun.github.io/2020/02/27/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%AF%B9%E6%AF%94/"/>
    <id>https://cnxiekun.github.io/2020/02/27/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%AF%B9%E6%AF%94/</id>
    <published>2020-02-27T07:07:11.000Z</published>
    <updated>2021-07-12T07:17:24.804Z</updated>
    
    <content type="html"><![CDATA[<p><strong>集成学习（Ensemble Learning）是通过结合多个基学习器的预测结果来改善单个学习器的泛化能力和鲁棒性。</strong></p><p>根据基学习器的生成方式，集成学习方法大致分为两类：</p><ol><li>基学习器之间存在强依赖关系、必须串行生成</li><li>基学习器间不存在强依赖关系、可同时生成的并行化方法</li></ol><p>前者的代表就是 Boosting (如 <code>GBDT</code>、<code>XGBoost</code>)，后者的代表是 Bagging (如 <code>RF</code>)。</p><span id="more"></span><h2 id="RF"><a href="#RF" class="headerlink" title="RF"></a>RF</h2><p>Bagging 可以简单的理解为：样本放回抽样，多数表决（分类）或简单平均（回归），同时Bagging的基学习器之间属于并列生成，不存在强依赖关系。</p><p>RF (Random Forest，随机森林) 是 Bagging 的扩展变体，以决策树为基学习器，且在决策树的训练过程中引入了随机特征选择，因此 RF 可以概括为以下四个部分：</p><ol><li>样本放回抽样</li><li>特征随机选择</li><li>构建决策树</li><li>随机森林投票/平均</li></ol><p>特征随机选择是指在决策树的构建中，会从样本集的特征集合中随机选择部分特征，然后再从这个子集中选择最优的属性用于划分，这种随机性导致随机森林的偏差会有稍微的增加，但是由于随机森林的“平均”特性，会使得它的方差减小，而且方差的减小补偿了偏差的增大，因此总体而言是更好的模型。</p><p>RF 重要特点：</p><ol><li>每棵决策树都最大可能的进行生长而不进行剪枝</li><li>不用交叉验证或者使用一个独立的测试集获得无偏估计，RF 可以在内部进行评估——每个基学习器只使用了训练集中约63.2%的样本，剩下约36.8% ($1/e$)的样本可用做验证集来对其泛化性能进行“包外估计” (out-of-bag)</li></ol><p>RF 优缺点：</p><ol><li>优点：<ul><li>在数据集上表现较好（训练速度、预测准确率）</li><li>能够处理很高维的数据，并且不用特征选择，能给出特征的重要性</li><li>易并行训练</li></ul></li><li>缺点：<ul><li>在噪声较大的分类或者回归问题上易过拟合</li></ul></li></ol><h2 id="GBDT"><a href="#GBDT" class="headerlink" title="GBDT"></a>GBDT</h2><p>Boosting 是一种与 Bagging 类似的技术，但 Boosting 是通过关注被已有分类器错分的那些数据来获得新的分类器——串行生成基分类器。Boosting 分类的结果是基于所有分类器的加权求和，每个分类器权重并不相等，每个权重代表对应的分类器在上一轮迭代中的成功度，而 Bagging 中的分类器权值是一样的。</p><p>GBDT (Gradient Boosting Decision Tree, 梯度提升树) 与传统的 Boosting 区别较大，它的每一次计算都是为了减少上一次的残差。为了消除残差，在残差减小的梯度方向上建立模型，每个新的模型的建立是为了使得之前的模型的残差往梯度下降的方法，与传统的 Boosting 中关注正确错误的样本加权有着很大的区别。</p><p>在 GradientBoosting 算法中，利用损失函数的负梯度方向在当前模型的值作为残差的近似值，进而拟合一棵 CART 回归树。GBDT 的会累加所有树的结果，而这种累加是无法通过分类完成的，因此 GBDT 的树都是 CART 回归树，而不是分类树。</p><p>GBDT 优缺点（与RF有点类似）：</p><ol><li>优点：<ul><li>性能在 RF 的基础上“有一定提升”</li><li>能灵活的处理各种类型的数据</li><li>在相对较少的调参时间下，预测的准确度较高</li></ul></li><li>缺点：<ul><li>基学习器之前存在串行关系，难以并行训练</li></ul></li></ol><h2 id="XGBoost"><a href="#XGBoost" class="headerlink" title="XGBoost"></a>XGBoost</h2><p>XGBoost 的性能在 GBDT 上又有一步提升，毕竟比赛神器。XGBoost 能够自动地运用 CPU 的多线程进行并行计算，同时在算法精度上也进行了精度的提高。</p><p>由于 GBDT 在合理的参数设置下，往往要生成一定数量的树才能达到令人满意的准确率，在数据集较复杂时，模型可能需要几千次迭代运算。但是 XGBoost 利用并行的 CPU 更好的解决了这个问题。</p><h2 id="GBDT-与-XGBoost区别"><a href="#GBDT-与-XGBoost区别" class="headerlink" title="GBDT 与 XGBoost区别"></a>GBDT 与 XGBoost区别</h2><ol><li><strong>基学习器:</strong> 传统的 GBDT 以 CART 树作为基学习器，XGBoost 还支持线性分类器，这个时候XGBoost相当于 L1 和 L2 正则化的 Logistics Regression（分类）或者 Linear Regression（回归）</li><li><strong>导数信息:</strong> 传统的 GBDT 在优化的时候只用到一阶导数信息，XGBoost 则对代价函数进行了二阶泰勒展开，得到一阶和二阶导数</li><li><strong>正则项:</strong> XGBoost 在代价函数中加入了正则项，用于控制模型的复杂度。从权衡方差偏差来看，它降低了模型的方差，使学习出来的模型更加简单，防止过拟合，这也是 XGBoost 优于传统 GBDT 的一个特性</li><li><strong>列抽样:</strong> XGBoost 借鉴了随机森林的做法，支持列抽样，不仅防止过拟合，还能减少计算</li><li><strong>缺失值处理:</strong> 对于特征的值有缺失的样本，XGBoost 可以自动学习出它的分裂方向</li><li><strong>并行:</strong> XGBoost的并行不是 tree 粒度的并行，XGBoost 也是一次迭代完才能进行下一次迭代的。XGBoost 的并行是在<code>特征粒度</code>上的。决策树的学习最耗时的一个步骤就是对特征的值进行排序——要确定最佳分割点，XGBoost 在训练之前，预先对数据进行了排序，然后保存为 block 结构，后面的迭代中重复地使用这个结构，大大减小计算量。这个 block 结构也使得并行成为了可能，在进行节点的分裂时，需要计算每个特征的增益，最终选增益最大的那个特征去做分裂，那么各个特征的增益计算就可以开多线程进行</li></ol><p><strong>Remark:</strong> 相关面试问答可以参考：</p><ol><li><a href="https://blog.csdn.net/u014465639/article/details/73912614">N问GBDT</a></li><li><a href="https://zhuanlan.zhihu.com/p/34679467">RF、GBDT、XGBoost常见面试题整理</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;集成学习（Ensemble Learning）是通过结合多个基学习器的预测结果来改善单个学习器的泛化能力和鲁棒性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据基学习器的生成方式，集成学习方法大致分为两类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基学习器之间存在强依赖关系、必须串行生成&lt;/li&gt;
&lt;li&gt;基学习器间不存在强依赖关系、可同时生成的并行化方法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;前者的代表就是 Boosting (如 &lt;code&gt;GBDT&lt;/code&gt;、&lt;code&gt;XGBoost&lt;/code&gt;)，后者的代表是 Bagging (如 &lt;code&gt;RF&lt;/code&gt;)。&lt;/p&gt;</summary>
    
    
    
    <category term="机器学习" scheme="https://cnxiekun.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="RF" scheme="https://cnxiekun.github.io/tags/RF/"/>
    
    <category term="GBDT" scheme="https://cnxiekun.github.io/tags/GBDT/"/>
    
    <category term="XGBoost" scheme="https://cnxiekun.github.io/tags/XGBoost/"/>
    
  </entry>
  
  <entry>
    <title>链表</title>
    <link href="https://cnxiekun.github.io/2020/02/26/%E9%93%BE%E8%A1%A8/"/>
    <id>https://cnxiekun.github.io/2020/02/26/%E9%93%BE%E8%A1%A8/</id>
    <published>2020-02-26T15:32:25.000Z</published>
    <updated>2021-07-12T07:17:24.800Z</updated>
    
    <content type="html"><![CDATA[<p><strong>相比<a href="https://cnxiekun.github.io/2020/02/25/%E6%95%B0%E7%BB%84/">数组</a>，链表是一种稍微复杂一点的数据结构。</strong></p><h2 id="链表结构"><a href="#链表结构" class="headerlink" title="链表结构"></a>链表结构</h2><p>从<strong>底层的存储结构</strong>来看，数组需要一块<strong>连续的内存空间</strong>来存储，对内存的要求比较高。如果申请一个 100MB 大小的数组，当内存中没有连续的、足够大的存储空间时，即便内存的剩余总可用空间大于 100MB，仍然会申请失败。</p><p>链表恰恰相反，它并不需要一块连续的内存空间，它通过“指针”将一组<strong>零散的内存块</strong>串联起来使用。所以如果申请的是 100MB 大小的链表，根本不会有问题。</p><p>三种最常见的链表结构，它们分别是：<code>单链表</code>、<code>双向链表</code> 和 <code>循环链表</code>。</p><span id="more"></span><p><img src="/2020/02/26/%E9%93%BE%E8%A1%A8/%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83.jpg" alt="内存分布"></p><h3 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h3><p>链表通过指针将一组零散的内存块串联在一起，称内存块为链表的“<strong>结点</strong>”。为了将所有的结点串起来，每个链表的结点除了存储数据之外，还需要记录链上的下一个结点的地址。如图所示，记录下个结点地址的指针叫作**后继指针 <code>next</code>**。</p><p><img src="/2020/02/26/%E9%93%BE%E8%A1%A8/%E5%8D%95%E9%93%BE%E8%A1%A8.jpg" alt="单链表"></p><p>有两个结点比较特殊，第一个结点——**<code>头结点</code>** 和最后一个结点——**<code>尾结点</code><strong>。头结点用来记录链表的基地址,可以用来遍历得到整条链表。尾结点的指针不是指向下一个结点，而是指向一个</strong>空地址 <code>NULL</code>**，表示这是链表上最后一个结点。</p><p>与数组一样，链表也支持数据的查找、插入和删除操作。在进行数组的插入、删除操作时，为了保持内存数据的连续性，需要做大量的数据搬移，所以时间复杂度是 $O(n)$。而在链表中插入或者删除一个数据，并不需要为了保持内存的连续性而搬移结点，因为链表的存储空间本身就不是连续的。所以，在链表中插入和删除一个数据是非常快速的。</p><p>从下图可以看出，针对链表的插入和删除操作，只需要考虑相邻结点的指针改变，所以对应的时间复杂度是 $O(1)$。</p><p><img src="/2020/02/26/%E9%93%BE%E8%A1%A8/%E5%8D%95%E9%93%BE%E8%A1%A8%E6%8F%92%E5%85%A5%E5%88%A0%E9%99%A4.jpg" alt="单链表插入删除"></p><p>但是，有利就有弊。链表要想随机访问第 $k$ 个元素，没有数组那么高效。因为链表中的数据并非连续存储的，所以无法像数组那样，根据首地址和下标，通过寻址公式就能直接计算出对应的内存地址，而是需要根据指针一个结点一个结点地依次遍历，直到找到相应的结点。所以，链表随机访问的性能没有数组好，需要 $O(n)$ 的时间复杂度。</p><h3 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h3><p>一种特殊的单链表，它跟单链表唯一的区别就在尾结点。循环链表的尾结点指针是指向链表的头结点，它像一个环一样首尾相连，所以叫作“循环”链表。</p><p><img src="/2020/02/26/%E9%93%BE%E8%A1%A8/%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8.jpg" alt="循环链表"></p><p>和单链表相比，循环链表的优点是从链尾到链头比较方便。当要处理的数据具有环型结构特点时，就特别适合采用循环链表。比如著名的<a href="https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98">约瑟夫问题</a>。尽管用单链表也可以实现，但是用循环链表实现的话，代码就会简洁很多。</p><h3 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h3><p>单向链表只有一个方向，结点只有一个后继指针 <code>next</code> 指向后面的结点。而双向链表，它支持两个方向，每个结点不止有一个后继指针 <code>next</code> 指向后面的结点，还有一个前驱指针 <code>prev</code> 指向前面的结点。</p><p><img src="/2020/02/26/%E9%93%BE%E8%A1%A8/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8.jpg" alt="双向链表"></p><p>双向链表需要额外的两个空间来存储后继结点和前驱结点的地址。所以，如果存储同样多的数据，双向链表要比单链表占用更多的内存空间。虽然两个指针比较浪费存储空间，但可以支持双向遍历，这样也带来了双向链表操作的灵活性。</p><p>从结构上来看，双向链表可以支持 $O(1)$ 时间复杂度的情况下找到前驱结点，正是这样的特点，也使双向链表在某些情况下的插入、删除等操作都要比单链表简单、高效。</p><p><strong>用空间换时间</strong>的设计思想：当内存空间充足的时候，如果追求代码的执行速度，可以选择空间复杂度相对较高、但时间复杂度相对很低的算法或者数据结构。相反，如果内存比较紧缺，就要反过来用时间换空间的设计思路。</p><blockquote><p>对于执行较慢的程序，可以通过消耗更多的内存（空间换时间）来进行优化；而消耗过多内存的程序，可以通过消耗更多的时间（时间换空间）来降低内存的消耗。</p></blockquote><p><strong>Remark</strong>: 把循环链表和双向链表整合在一起：<strong>双向循环链表</strong>。</p><p><img src="/2020/02/26/%E9%93%BE%E8%A1%A8/%E5%8F%8C%E5%90%91%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8.jpg" alt="双向循环链表"></p><h2 id="链表-VS-数组性能比较"><a href="#链表-VS-数组性能比较" class="headerlink" title="链表 VS 数组性能比较"></a>链表 VS 数组性能比较</h2><p>数组和链表是两种截然不同的内存组织方式。正是因为内存存储的区别，它们插入、删除、随机访问操作的时间复杂度正好相反。</p><p><img src="/2020/02/26/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A8%E6%95%B0%E7%BB%84%E5%A4%8D%E6%9D%82%E5%BA%A6.jpg" alt="链表数组复杂度"></p><p>数组简单易用，在实现上使用的是连续的内存空间，可以借助 CPU 的缓存机制，预读数组中的数据，所以访问效率更高。而链表在内存中并不是连续存储，所以对 CPU 缓存不友好，没办法有效预读。</p><p>数组的缺点是大小固定，一经声明就要占用整块连续内存空间。如果声明的数组过大，系统可能没有足够的连续内存空间分配给它，导致“内存不足（out of memory）”。如果声明的数组过小，则可能出现不够用的情况。这时只能再申请一个更大的内存空间，把原数组拷贝进去，非常费时。链表本身没有大小的限制，天然地支持动态扩容，这也是它与数组最大的区别。</p><blockquote><p>Java 中的 ArrayList 容器，可以支持动态扩容。但往支持动态扩容的数组中插入一个数据时，如果数组中没有空闲空间了，就会申请一个更大的空间，将数据拷贝过去，而数据拷贝的操作非常耗时。</p></blockquote><p>如果代码对内存的使用非常苛刻，那数组更适合。因为链表中的每个结点都需要消耗额外的存储空间去存储一份指向下一个结点的指针，所以内存消耗会翻倍。而且，对链表进行频繁的插入、删除操作，还会导致频繁的内存申请和释放，容易造成内存碎片，如果是 Java 语言，就有可能会导致频繁的 GC（Garbage Collection，垃圾回收）。所以，在实际的开发中，针对不同类型的项目，要根据具体情况，权衡究竟是选择数组还是链表。</p><h2 id="如何基于链表实现-LRU-最少使用策略-Least-Recently-Used-缓存淘汰算法？"><a href="#如何基于链表实现-LRU-最少使用策略-Least-Recently-Used-缓存淘汰算法？" class="headerlink" title="如何基于链表实现 LRU (最少使用策略, Least Recently Used) 缓存淘汰算法？"></a>如何基于链表实现 LRU (最少使用策略, Least Recently Used) 缓存淘汰算法？</h2><p>缓存实际上就是利用了空间换时间的设计思想，如果把数据存储在硬盘上，会比较节省内存，但每次查找数据都要询问一次硬盘，会比较慢。但如果通过缓存技术，事先将数据加载在内存中，虽然会比较耗费内存空间，但是每次数据查询的速度就大大提高了。</p><p>思路：维护一个有序单链表，越靠近链表尾部的结点是越早之前访问的。当有一个新的数据被访问时，从链表头开始顺序遍历链表。</p><ol><li>如果此数据之前已经被缓存在链表中了，遍历得到这个数据对应的结点，并将其从原来的位置删除，然后再插入到链表的头部。</li><li>如果此数据没有在缓存链表中，可以分为两种情况：<ul><li>如果此时缓存未满，则将此结点直接插入到链表的头部</li><li>如果此时缓存已满，则链表尾结点删除，将新的数据结点插入链表的头部。</li></ul></li></ol><blockquote><p>参考资料：<a href="https://time.geekbang.org/column/article/41013">王争——链表：如何实现LRU缓存淘汰算法？</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;相比&lt;a href=&quot;https://cnxiekun.github.io/2020/02/25/%E6%95%B0%E7%BB%84/&quot;&gt;数组&lt;/a&gt;，链表是一种稍微复杂一点的数据结构。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;链表结构&quot;&gt;&lt;a href=&quot;#链表结构&quot; class=&quot;headerlink&quot; title=&quot;链表结构&quot;&gt;&lt;/a&gt;链表结构&lt;/h2&gt;&lt;p&gt;从&lt;strong&gt;底层的存储结构&lt;/strong&gt;来看，数组需要一块&lt;strong&gt;连续的内存空间&lt;/strong&gt;来存储，对内存的要求比较高。如果申请一个 100MB 大小的数组，当内存中没有连续的、足够大的存储空间时，即便内存的剩余总可用空间大于 100MB，仍然会申请失败。&lt;/p&gt;
&lt;p&gt;链表恰恰相反，它并不需要一块连续的内存空间，它通过“指针”将一组&lt;strong&gt;零散的内存块&lt;/strong&gt;串联起来使用。所以如果申请的是 100MB 大小的链表，根本不会有问题。&lt;/p&gt;
&lt;p&gt;三种最常见的链表结构，它们分别是：&lt;code&gt;单链表&lt;/code&gt;、&lt;code&gt;双向链表&lt;/code&gt; 和 &lt;code&gt;循环链表&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://cnxiekun.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="链表" scheme="https://cnxiekun.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>数组</title>
    <link href="https://cnxiekun.github.io/2020/02/25/%E6%95%B0%E7%BB%84/"/>
    <id>https://cnxiekun.github.io/2020/02/25/%E6%95%B0%E7%BB%84/</id>
    <published>2020-02-25T15:55:10.000Z</published>
    <updated>2021-07-12T07:17:24.797Z</updated>
    
    <content type="html"><![CDATA[<p><strong>数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。</strong></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>通过了解以下几个关键词，掌握数组。</p><ol><li><strong>线性表</strong> (Linear List): 数据排成像一条线一样的结构，每个线性表上的数据最多只有前和后两个方向。除了数组，链表、队列、栈等也是线性表结构。</li></ol><span id="more"></span><p><img src="/2020/02/25/%E6%95%B0%E7%BB%84/%E7%BA%BF%E6%80%A7%E8%A1%A8.jpg" alt="线性表"></p><p>而与它相对立的概念是<strong>非线性表</strong>，比如二叉树、堆、图等。在非线性表中，数据之间并不是简单的前后关系。</p><p><img src="/2020/02/25/%E6%95%B0%E7%BB%84/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A1%A8.jpg" alt="非线性表"></p><ol start="2"><li><strong>连续的内存空间和相同类型的数据</strong>: “杀手锏”特性——<code>随机访问</code>。<br>但有利就有弊，这两个限制也让数组的很多操作变得非常低效，比如要想在数组中 <code>删除</code>、<code>插入</code> 一个数据，为了保证连续性，就需要做大量的数据搬移工作。</li></ol><h2 id="数组是如何实现根据下标随机访问数组元素"><a href="#数组是如何实现根据下标随机访问数组元素" class="headerlink" title="数组是如何实现根据下标随机访问数组元素?"></a>数组是如何实现根据下标随机访问数组元素?</h2><p>以一个长度为 10 的 <code>int</code> 类型的数组 <code>int[] a = new int[10]</code> 举例。在下图中，计算机给数组 <code>a[10]</code>，分配了一块连续内存空间 1000～1039，其中，内存块的首地址为 <code>base_address = 1000</code>。</p><p><img src="/2020/02/25/%E6%95%B0%E7%BB%84/%E6%95%B0%E7%BB%84%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4.jpg" alt="数组存储空间"></p><p>计算机会给每个内存单元分配一个地址，计算机通过地址来访问内存中的数据。当计算机需要随机访问数组中的某个元素时，它会首先通过下面的寻址公式，计算出该元素存储的内存地址:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[i]_address = base_address + i * data_type_size</span><br></pre></td></tr></table></figure><p>其中 <code>data_type_size</code> 表示数组中每个元素的大小。这里，数组中存储的是 <code>int</code> 类型数据，所以 <code>data_type_size</code> 就为 4 个字节。</p><blockquote><p>特别纠正一个“错误”：在面试的时候，会问数组和链表的区别，很多人都回答说，“链表适合插入、删除，时间复杂度 $O(1)$；数组适合查找，查找时间复杂度为 $O(1)$”。<br>实际上，这种表述不准确。数组是适合查找操作，但是查找的时间复杂度并不为 $O(1)$。即便是排好序的数组，用二分查找，时间复杂度也是 $O(logn)$。所以，正确的表述应该是，数组支持随机访问，根据下标随机访问的时间复杂度为 $O(1)$。</p></blockquote><h2 id="低效的-插入-和-删除"><a href="#低效的-插入-和-删除" class="headerlink" title="低效的 插入 和 删除"></a>低效的 <code>插入</code> 和 <code>删除</code></h2><p>数组为了保持内存数据的连续性，会导致插入、删除这两个操作比较低效。究竟为什么会导致低效？又有哪些改进方法呢？</p><h3 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a>插入操作</h3><p>假设数组的长度为 $n$，现在，如果我们需要将一个数据插入到数组中的第 $k$ 个位置。为了把第 $k$ 个位置腾出来，给新来的数据，我们需要将第 $k-n$ 这部分的元素都顺序地往后挪一位。</p><p>如果在数组的末尾插入元素，不需要移动数据，时间复杂度为 $O(1)$。如果在数组的开头插入元素，所有的数据都需要依次往后移动一位，时间复杂度为 $O(n)$。 因为在每个位置插入元素的概率是一样的，所以平均情况时间复杂度为 $(1+2+\cdots+n)/n=O(n)$。</p><p>如果数组中的数据是有序的，在某个位置插入一个新的元素时，就必须按照刚才的方法搬移 $k$ 之后的数据。但是，如果数组中存储的数据并没有任何规律，数组只是被当作一个存储数据的集合。在这种情况下，如果要将某个数据插入到第 $k$ 个位置，为了避免大规模的数据搬移，有一个简单的办法，直接将第 $k$ 位的数据搬移到数组元素的最后，把新的元素直接放入第 $k$ 个位置。</p><p>假设数组 <code>a[10]</code> 中存储了如下 5 个元素：a，b，c，d，e。现在需要将元素 <code>x</code> 插入到第 3 个位置。我们只需要将 <code>c</code> 放入到 <code>a[5]</code>，将 <code>a[2]</code> 赋值为 <code>x</code> 即可。最后，数组中的元素如下： a，b，x，d，e，c。</p><p><img src="/2020/02/25/%E6%95%B0%E7%BB%84/%E6%95%B0%E7%BB%84%E6%8F%92%E5%85%A5.jpg" alt="数组插入"></p><p>利用这种处理技巧，在特定场景下，在第 $k$ 个位置插入一个元素的时间复杂度就会降为 $O(1)$。</p><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><p>跟插入数据类似，如果要删除第 $k$ 个位置的数据，为了内存的连续性，也需要搬移数据，不然中间就会出现空洞，内存就不连续了。</p><p>和插入类似，如果删除数组末尾的数据，则最好情况时间复杂度为 $O(1)$；如果删除开头的数据，则最坏情况时间复杂度为 $O(n)$；平均情况时间复杂度也为 $O(n)$。实际上，在某些特殊场景下，并不一定非得追求数组中数据的连续性。如果将多次删除操作集中在一起执行，删除的效率是不是会提高很多呢？</p><p>例如，数组 <code>a[10]</code> 中存储了 8 个元素：a，b，c，d，e，f，g，h。现在，依次删除 a，b，c 三个元素。</p><p><img src="/2020/02/25/%E6%95%B0%E7%BB%84/%E6%95%B0%E7%BB%84%E5%88%A0%E9%99%A4.jpg" alt="数组删除"></p><p>为了避免 d，e，f，g，h 这几个数据会被搬移三次，可以先记录下已经删除的数据。每次的删除操作并不是真正地搬移数据，只是记录数据已经被删除。当数组没有更多空间存储数据时，再触发执行一次真正的删除操作，这样就大大减少了删除操作导致的数据搬移。</p><h2 id="为什么大多数编程语言中，数组要从-0-开始编号，而不是从-1-开始呢？"><a href="#为什么大多数编程语言中，数组要从-0-开始编号，而不是从-1-开始呢？" class="headerlink" title="为什么大多数编程语言中，数组要从 0 开始编号，而不是从 1 开始呢？"></a>为什么大多数编程语言中，数组要从 0 开始编号，而不是从 1 开始呢？</h2><p>从数组存储的内存模型上来看，“下标”最确切的定义应该是“偏移（offset）”。如果用 <code>a</code> 来表示数组的首地址，<code>a[0]</code> 就是偏移为 <code>0</code> 的位置，也就是首地址，<code>a[k]</code> 就表示偏移 <code>k</code> 个 <code>type_size</code> 的位置，所以计算 <code>a[k]</code> 的内存地址只需要用这个公式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[k]_address = base_address + k * type_size</span><br></pre></td></tr></table></figure><p>但是，如果数组从 1 开始计数，那我们计算数组元素 <code>a[k]</code>的内存地址就会变为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[k]_address = base_address + (k - <span class="number">1</span>) * type_size</span><br></pre></td></tr></table></figure><p>对比两个公式，不难发现，从 1 开始编号，每次随机访问数组元素都多了一次减法运算，对于 CPU 来说，就是多了一次减法指令。数组作为非常基础的数据结构，通过下标随机访问数组元素又是其非常基础的编程操作，效率的优化就要尽可能做到极致。所以为了减少一次减法操作，数组选择了从 0 开始编号，而不是从 1 开始。</p><p>不过有人认为，上面解释得再多其实都算不上压倒性的证明，说数组起始编号非 0 开始不可。所以有人觉得最主要的原因可能是历史原因。<code>C</code> 语言设计者用 0 开始计数数组下标，之后的 <code>Java</code>、<code>JavaScript</code> 等高级语言都效仿了 <code>C</code> 语言，或者说，为了在一定程度上减少 <code>C</code> 语言程序员学习 <code>Java</code> 的学习成本，因此继续沿用了从 0 开始计数的习惯。实际上，很多语言中数组也并不是从 0 开始计数的，比如 <code>Matlab</code>。甚至还有一些语言支持负数下标，比如 <code>Python</code>。</p><blockquote><p>参考资料：<a href="https://time.geekbang.org/column/article/40961">王争——数组：为什么很多编程语言中数组都从0开始编号？</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;通过了解以下几个关键词，掌握数组。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;线性表&lt;/strong&gt; (Linear List): 数据排成像一条线一样的结构，每个线性表上的数据最多只有前和后两个方向。除了数组，链表、队列、栈等也是线性表结构。&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://cnxiekun.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数组" scheme="https://cnxiekun.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>学习数据结构与算法</title>
    <link href="https://cnxiekun.github.io/2020/02/25/%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    <id>https://cnxiekun.github.io/2020/02/25/%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</id>
    <published>2020-02-25T09:30:32.000Z</published>
    <updated>2021-07-12T07:17:24.791Z</updated>
    
    <content type="html"><![CDATA[<p>立个flag：非科班生出身，数据结构与算法相对薄弱，能不能在空余时间坚持学点东西，做个笔记？！</p><blockquote><p>学习途径：<code>极客时间</code></p></blockquote><h2 id="为什么要学习数据结构和算法？"><a href="#为什么要学习数据结构和算法？" class="headerlink" title="为什么要学习数据结构和算法？"></a>为什么要学习数据结构和算法？</h2><ol><li>直接好处是能够有写出性能更优的代码</li><li>算法，是一种解决问题的思路和方法，有机会应用到生活和事业的其他方面</li><li>长期来看，大脑思考能力是个人最重要的核心竞争力，而算法是为数不多的能够有效训练大脑思考能力的途径之一</li></ol><blockquote><p>怼人会更加自信，跳槽也不用畏畏缩缩</p></blockquote><span id="more"></span><h2 id="数据结构和算法是什么"><a href="#数据结构和算法是什么" class="headerlink" title="数据结构和算法是什么"></a>数据结构和算法是什么</h2><ol><li>数据结构是指一组数据的存储结构</li><li>算法就是操作数据的方法</li><li>数据结构和算法是相辅相成的，数据结构是为算法服务的，而算法要作用在特定的数据结构之上</li></ol><h2 id="学习的重点在什么地方"><a href="#学习的重点在什么地方" class="headerlink" title="学习的重点在什么地方"></a>学习的重点在什么地方</h2><p><strong>20 个最常用的、最基础的</strong>数据结构与算法，<strong>不管是应付面试还是工作需要，只要集中精力逐一攻克这 20 个知识点就足够了</strong>。</p><ol><li>10个数据结构：<code>数组</code>、<code>链表</code>、<code>栈</code>、<code>队列</code>、<code>散列表</code>、<code>二叉树</code>、<code>堆</code>、<code>跳表</code>、<code>图</code>、<code>Trie树</code></li><li>10个算法：<code>递归</code>、<code>排序</code>、<code>二分查找</code>、<code>搜索</code>、<code>哈希算法</code>、<code>贪心算法</code>、<code>分治算法</code>、<code>回溯算法</code>、<code>动态规划</code>、<code>字符串匹配算法</code></li></ol><p>在学习数据结构和算法的过程中，要学习它的<code>来历</code>、<code>自身的特点</code>、<code>适合解决的问题</code>以及<code>实际的应用场景</code>。</p><p>PS: 以下图片几乎涵盖了所有数据结构和算法书籍中都会讲到的知识点</p><p><img src="/2020/02/25/%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2020-02-25-%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%5C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95.jpg" alt="数据结构与算法"></p><blockquote><p>感谢<code>极客时间</code>提供的课程《数据结构与算法之美》。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;立个flag：非科班生出身，数据结构与算法相对薄弱，能不能在空余时间坚持学点东西，做个笔记？！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习途径：&lt;code&gt;极客时间&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么要学习数据结构和算法？&quot;&gt;&lt;a href=&quot;#为什么要学习数据结构和算法？&quot; class=&quot;headerlink&quot; title=&quot;为什么要学习数据结构和算法？&quot;&gt;&lt;/a&gt;为什么要学习数据结构和算法？&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;直接好处是能够有写出性能更优的代码&lt;/li&gt;
&lt;li&gt;算法，是一种解决问题的思路和方法，有机会应用到生活和事业的其他方面&lt;/li&gt;
&lt;li&gt;长期来看，大脑思考能力是个人最重要的核心竞争力，而算法是为数不多的能够有效训练大脑思考能力的途径之一&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;怼人会更加自信，跳槽也不用畏畏缩缩&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://cnxiekun.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>如何更新hexo博客</title>
    <link href="https://cnxiekun.github.io/2020/02/21/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://cnxiekun.github.io/2020/02/21/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0hexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-02-21T02:14:08.000Z</published>
    <updated>2021-07-12T07:17:24.791Z</updated>
    
    <content type="html"><![CDATA[<p>假设我们已经用了GitHub搭建了Hexo博客（参考<a href="https://cnxiekun.github.io/2017/03/26/Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/">Hexo-搭建博客</a>）。</p><h2 id="关于日常改动"><a href="#关于日常改动" class="headerlink" title="关于日常改动"></a>关于日常改动</h2><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过Git进行管理</p><ol><li>依次执行<code>git add .</code>、<code>git commit -m &quot;xxx&quot;</code>、<code>git push origin hexo</code>，同步到GitHub中的hexo分支</li><li>执行<code>hexo g -d</code>更新网站并部署到GitHub中的master分支</li></ol><span id="more"></span><h2 id="换了新电脑？"><a href="#换了新电脑？" class="headerlink" title="换了新电脑？"></a>换了新电脑？</h2><p>如果重装电脑，或者想在其他电脑上修改博客</p><ol><li>从官网<a href="https://git-scm.com/">Git</a>下载git</li><li>下载<a href="https://nodejs.org/">Node.js</a></li><li>使用<code>git@github.com:cnxiekun/cnxiekun.github.io.git</code> clone仓库（默认为hexo分支）</li><li>在本地的<a href="https://github.com/cnxiekun/cnxiekun.github.io">cnxiekun.github.io</a>文件夹下通过<code>Git bash</code>依次执行：<ul><li><code>sudo npm install hexo-cli -g</code></li><li><code>npm install</code></li><li><code>npm install hexo-deployer-git --save</code></li></ul></li></ol><p>如果之前整个hexo文件夹你都备份到新电脑上了，以上的第4步只需要执行：</p><ul><li><code>sudo npm install hexo-cli -g</code></li></ul><p><em><strong>PS:</strong></em> 可能遇到版本不兼容的<a href="https://github.com/angular/angular/issues/13935">bug</a>，例如：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Unsupported</span> platform for fsevents@<span class="number">1</span>.<span class="number">0</span>.<span class="number">14</span>: wanted &#123;<span class="string">&quot;os&quot;</span>:<span class="string">&quot;darwin&quot;</span>,<span class="string">&quot;arch&quot;</span>:<span class="string">&quot;any&quot;</span>&#125; (current: &#123;<span class="string">&quot;os&quot;</span>:<span class="string">&quot;win32&quot;</span>,<span class="string">&quot;arch&quot;</span>:<span class="string">&quot;x64&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><p>解决办法：<code>npm i -f</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;假设我们已经用了GitHub搭建了Hexo博客（参考&lt;a href=&quot;https://cnxiekun.github.io/2017/03/26/Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/&quot;&gt;Hexo-搭建博客&lt;/a&gt;）。&lt;/p&gt;
&lt;h2 id=&quot;关于日常改动&quot;&gt;&lt;a href=&quot;#关于日常改动&quot; class=&quot;headerlink&quot; title=&quot;关于日常改动&quot;&gt;&lt;/a&gt;关于日常改动&lt;/h2&gt;&lt;p&gt;在本地对博客进行修改（添加新博文、修改样式等等）后，通过Git进行管理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;依次执行&lt;code&gt;git add .&lt;/code&gt;、&lt;code&gt;git commit -m &amp;quot;xxx&amp;quot;&lt;/code&gt;、&lt;code&gt;git push origin hexo&lt;/code&gt;，同步到GitHub中的hexo分支&lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;hexo g -d&lt;/code&gt;更新网站并部署到GitHub中的master分支&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://cnxiekun.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://cnxiekun.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX 模板</title>
    <link href="https://cnxiekun.github.io/2017/07/27/LaTeX-%E6%A8%A1%E6%9D%BF/"/>
    <id>https://cnxiekun.github.io/2017/07/27/LaTeX-%E6%A8%A1%E6%9D%BF/</id>
    <published>2017-07-27T13:47:11.000Z</published>
    <updated>2021-07-12T07:17:24.790Z</updated>
    
    <content type="html"><![CDATA[<h3 id="模板：平时作业，报告，presentation等"><a href="#模板：平时作业，报告，presentation等" class="headerlink" title="模板：平时作业，报告，presentation等"></a>模板：平时作业，报告，presentation等</h3><p>经过长时间的使用以及琢磨，整理了一些有用的 <code>LaTeX</code> 环境设置，详情请看下面配置：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">% Setup Python code highlight</span><br><span class="line">\usepackage&#123;listings&#125;</span><br><span class="line">\usepackage&#123;color&#125;</span><br><span class="line"> </span><br><span class="line">\definecolor&#123;codegreen&#125;&#123;rgb&#125;&#123;0,0.6,0&#125;</span><br><span class="line">\definecolor&#123;codegray&#125;&#123;rgb&#125;&#123;0.5,0.5,0.5&#125;</span><br><span class="line">\definecolor&#123;codepurple&#125;&#123;rgb&#125;&#123;0.58,0,0.82&#125;</span><br><span class="line">\definecolor&#123;backcolour&#125;&#123;rgb&#125;&#123;0.95,0.95,0.92&#125;</span><br><span class="line"> </span><br><span class="line">\lstdefinestyle&#123;mystyle&#125;&#123;</span><br><span class="line">    language=Python,</span><br><span class="line">    frame=lines,</span><br><span class="line">    backgroundcolor=\color&#123;backcolour&#125;,   </span><br><span class="line">    commentstyle=\color&#123;codegreen&#125;,</span><br><span class="line">    keywordstyle=\color&#123;magenta&#125;,</span><br><span class="line">    numberstyle=\tiny\color&#123;codegray&#125;,</span><br><span class="line">    stringstyle=\color&#123;codepurple&#125;,</span><br><span class="line">    basicstyle=\footnotesize,</span><br><span class="line">    breakatwhitespace=false,         </span><br><span class="line">    breaklines=true,                 </span><br><span class="line">    captionpos=b,                    </span><br><span class="line">    keepspaces=true,                 </span><br><span class="line">    numbers=left,                    </span><br><span class="line">    numbersep=5pt,                  </span><br><span class="line">    showspaces=false,                </span><br><span class="line">    showstringspaces=false,</span><br><span class="line">    showtabs=false,                  </span><br><span class="line">    tabsize=2</span><br><span class="line">&#125; </span><br><span class="line">% \lstset&#123;caption=&#123;Insert code directly in your document&#125;&#125;</span><br><span class="line">% \lstset&#123;label=&#123;lst:code_direct&#125;&#125;</span><br><span class="line">\lstset&#123;style=mystyle&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">% ---------- some macro for typing ----------------</span><br><span class="line">%\numberwithin&#123;equation&#125;&#123;section&#125;</span><br><span class="line">\theoremstyle&#123;plain&#125;</span><br><span class="line">%\newtheorem&#123;definition&#125;&#123;Definition&#125;[section]</span><br><span class="line">%\newtheorem&#123;theorem&#125;&#123;Theorem&#125;[section]</span><br><span class="line">%\newtheorem&#123;lemma&#125;&#123;Lemma&#125;[section]</span><br><span class="line">\newtheorem&#123;proposition&#125;&#123;Proposition&#125;[section]</span><br><span class="line">% \newtheorem&#123;corollary&#125;&#123;Corollary&#125;[section]</span><br><span class="line">\newtheorem&#123;remark&#125;&#123;Remark&#125;[section]</span><br><span class="line">\newtheorem&#123;conjecture&#125;&#123;Conjecture&#125;[section]</span><br><span class="line">\newtheorem&#123;assumption&#125;&#123;Assumption&#125;[section]</span><br><span class="line"></span><br><span class="line">\newcommand&#123;\R&#125;&#123;\mathbb&#123;R&#125;&#125; % real numbers</span><br><span class="line">\newcommand&#123;\Q&#125;&#123;\mathbb&#123;Q&#125;&#125; % rational numbers</span><br><span class="line">\newcommand&#123;\Z&#125;&#123;\mathbb&#123;Z&#125;&#125; % integer numbers</span><br><span class="line">\newcommand&#123;\N&#125;&#123;\mathbb&#123;N&#125;&#125; % natural numbers</span><br><span class="line">\newcommand&#123;\C&#125;&#123;\mathbb&#123;C&#125;&#125; % </span><br><span class="line">\newcommand&#123;\E&#125;&#123;\mathbb&#123;E&#125;&#125; % expectation</span><br><span class="line"></span><br><span class="line">\newcommand&#123;\fl&#125;[1]&#123;\lfloor&#123;#1&#125;\rfloor&#125; % floor of a number</span><br><span class="line">\newcommand&#123;\cl&#125;[1]&#123;\lceil&#123;#1&#125;\rceil&#125; % ceiling of a number</span><br><span class="line">\newcommand&#123;\norm&#125;[2]&#123;\|&#123;#1&#125;\|_&#123;#2&#125;&#125; % norm</span><br><span class="line">\newcommand&#123;\id&#125;[1]&#123;&#123;\bf&#123;1&#125;&#125;_&#123;&#123;&#123;#1&#125;&#125;&#125;&#125; % index function</span><br><span class="line"></span><br><span class="line">% for highlighting changes</span><br><span class="line">\usepackage[normalem]&#123;ulem&#125;</span><br><span class="line">\newcommand&#123;\delete&#125;[1]&#123;\textcolor&#123;red&#125;&#123;\sout&#123;#1&#125;&#125;&#125; % delete</span><br><span class="line">\newcommand&#123;\replace&#125;[2]&#123;\textcolor&#123;red&#125;&#123;\sout&#123;#1&#125;&#125; \textcolor&#123;blue&#125;&#123;&#123;#2&#125;&#125;&#125; % replace #1 with #2</span><br><span class="line">\newcommand&#123;\red&#125;[1]&#123;\textcolor&#123;red&#125;&#123;#1&#125;&#125; % red / emphasize</span><br><span class="line">\newcommand&#123;\comment&#125;[2]&#123;\textcolor&#123;blue&#125;&#123;(&#123;#1&#125;: &#123;#2&#125;)&#125;&#125; % comments</span><br><span class="line">\newcommand&#123;\kxie&#125;[1]&#123;\textcolor&#123;magenta&#125;&#123;&#123;Kun: &#125;&#123;#1&#125;&#125;&#125; % comments by Kun</span><br><span class="line">\newcommand&#123;\purple&#125;[1]&#123;\textcolor&#123;myPrince&#125;&#123;#1&#125;&#125; % purple / example</span><br><span class="line">\newcommand&#123;\blue&#125;[1]&#123;\textcolor&#123;blue&#125;&#123;#1&#125;&#125; % blue</span><br><span class="line"></span><br><span class="line">\definecolor&#123;myBlue&#125;&#123;RGB&#125;&#123;0,51,102&#125;</span><br><span class="line">\definecolor&#123;myGold&#125;&#123;RGB&#125;&#123;28,122,166&#125;</span><br><span class="line">\definecolor&#123;myPrince&#125;&#123;RGB&#125;&#123;188,47,235&#125;</span><br></pre></td></tr></table></figure><h3 id="模板下载"><a href="#模板下载" class="headerlink" title="模板下载"></a>模板下载</h3><p>为了防止以后会遗忘，写了这个文档作为备份。等有空的时候，专门建一个备份Git是最好的。</p><p>最后附上本人的两个模板，一个是写文件的用的，另一个是做presentation用的。</p><ol><li><a href="article.tex">article.tex</a></li><li><a href="presentation.tex">presentation.tex</a>，需要额外配置文件<a href="beamerouterthemeinfoheading.sty">点我下载</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;模板：平时作业，报告，presentation等&quot;&gt;&lt;a href=&quot;#模板：平时作业，报告，presentation等&quot; class=&quot;headerlink&quot; title=&quot;模板：平时作业，报告，presentation等&quot;&gt;&lt;/a&gt;模板：平时作业，报告，presentation等&lt;/h3&gt;&lt;p&gt;经过长时间的使用以及琢磨，整理了一些有用的 &lt;code&gt;LaTeX&lt;/code&gt; 环境设置，详情请看下面配置：&lt;/p&gt;</summary>
    
    
    
    <category term="LaTeX" scheme="https://cnxiekun.github.io/categories/LaTeX/"/>
    
    
    <category term="LaTeX" scheme="https://cnxiekun.github.io/tags/LaTeX/"/>
    
    <category term="Template" scheme="https://cnxiekun.github.io/tags/Template/"/>
    
  </entry>
  
  <entry>
    <title>How to use pgfplots in LaTeX</title>
    <link href="https://cnxiekun.github.io/2017/03/30/How-to-use-pgfplots-in-LaTeX/"/>
    <id>https://cnxiekun.github.io/2017/03/30/How-to-use-pgfplots-in-LaTeX/</id>
    <published>2017-03-30T09:01:37.000Z</published>
    <updated>2021-07-12T07:17:24.784Z</updated>
    
    <content type="html"><![CDATA[<p>Before we start, the following packages and command are useful:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\usepackage&#123;tikz&#125; % To generate the plot from csv</span><br><span class="line">\usepackage&#123;pgfplots&#125;</span><br><span class="line">\pgfplotsset&#123;compat=1.5&#125;</span><br></pre></td></tr></table></figure><h2 id="Plotting-data-from-dat-files-in-LaTeX"><a href="#Plotting-data-from-dat-files-in-LaTeX" class="headerlink" title="Plotting data from .dat files in LaTeX"></a>Plotting data from <code>.dat</code> files in LaTeX</h2><h3 id="Using-addplot-table"><a href="#Using-addplot-table" class="headerlink" title="Using \addplot table"></a>Using <code>\addplot table</code></h3><p>Ploting data directly from a <code>.dat</code> file. For example, if a file called <code>data.dat</code> has the data table shown as follows:</p><span id="more"></span><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">xf(x)</span><br><span class="line">3.16693000e<span class="string">-05</span><span class="string">-4</span>.00001451e<span class="string">+00</span></span><br><span class="line">1.00816962e<span class="string">-03</span><span class="string">-3</span>.08781504e<span class="string">+00</span></span><br><span class="line">1.98466995e<span class="string">-03</span><span class="string">-2</span>.88058811e<span class="string">+00</span></span><br><span class="line">2.96117027e<span class="string">-03</span><span class="string">-2</span>.75205040e<span class="string">+00</span></span><br><span class="line">3.93767059e<span class="string">-03</span><span class="string">-2</span>.65736805e<span class="string">+00</span></span><br><span class="line">4.91417091e<span class="string">-03</span><span class="string">-2</span>.58181091e<span class="string">+00</span></span><br><span class="line">5.89067124e<span class="string">-03</span><span class="string">-2</span>.51862689e<span class="string">+00</span></span><br><span class="line">6.86717156e<span class="string">-03</span><span class="string">-2</span>.46413745e<span class="string">+00</span></span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>Using the following commands can generate the plots automatically.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;tikzpicture&#125;</span><br><span class="line">\begin&#123;axis&#125;[</span><br><span class="line">  title = &#123;Picture 1&#125;,  % whatever name you want</span><br><span class="line">  xlabel = &#123;$x$&#125;,</span><br><span class="line">  ylabel = &#123;$y$&#125;,</span><br><span class="line">  ymin = -3, ymax = 3,</span><br><span class="line">  minor y tick num = 1,]</span><br><span class="line">  \addplot[blue] table &#123;data.dat&#125;;</span><br><span class="line">\end&#123;axis&#125;</span><br><span class="line">\end&#123;tikzpicture</span><br></pre></td></tr></table></figure><p>Then the corresonding plot will be:</p><!-- if the above link doesn't work, use the following command --><p><img src="/2017/03/30/How-to-use-pgfplots-in-LaTeX/1.png" alt="Picture 1"></p><p><strong>REMARK:</strong></p><ul><li><code>\begin&#123;axis&#125;... \end&#123;axis&#125;</code> is the environment for a normal axis.</li><li>Axis descriptions can be added using the keys <code>title</code>, <code>xlabel</code>, <code>ylabel</code> as we have in our example listing.</li><li>The keys <code>ymin</code>, <code>ymax</code>, <code>xmin</code>, <code>xmax</code> control only the <em>visible</em> part, i.e., the axis range.</li><li>The third new option is <code>minor y tick num = 1</code> which allows to customize minor ticks.</li><li><code>\addplot[blue]</code> means that the plot will be placed in blue color, <code>\addplot table</code> loads a table from a file and plots the first two columns. The keyword <code>table</code> also accepts an option list (for example, to choose columns, to define a different <code>col sep</code> or <code>row sep</code> or to provide some math expression which is applied to each row).</li></ul><h3 id="Using-addplot-expression"><a href="#Using-addplot-expression" class="headerlink" title="Using \addplot expression"></a>Using <code>\addplot expression</code></h3><p>Of course, we can also use another way to generate a plot. More precisely, <code>\addplot expression</code> can make it. For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;tikzpicture&#125;</span><br><span class="line">\begin&#123;axis&#125;</span><br><span class="line">  % density of Normal distribution:</span><br><span class="line">  \newcommand\MU&#123;0&#125;</span><br><span class="line">  \newcommand\SIGMA&#123;1e-3&#125;</span><br><span class="line">  \addplot[red, domain = -3*\SIGMA: 3*\SIGMA, samples = 201,]</span><br><span class="line">          &#123;exp(-(x-\MU)^2 / 2 / \SIGMA^2) / (\SIGMA * sqrt(2*pi))&#125;;</span><br><span class="line">\end&#123;axis&#125;</span><br><span class="line">\end&#123;tikzpicture&#125;</span><br></pre></td></tr></table></figure><p>The above commands can obtain the following plot:</p><!-- if the above link doesn't work, use the following command --><p><img src="/2017/03/30/How-to-use-pgfplots-in-LaTeX/2.png" alt="Picture 1"></p><p><strong>REMARK:</strong></p><ul><li><code>domain</code> defines the sampling interval in the form <strong>a:b</strong>.</li><li><code>samples = N</code> expects the number of samples inserted into the sampling interval.</li><li>Here the <code>expression</code> is the density of Normal distribution.</li></ul><h3 id="Dealing-with-multiple-files-simultaneously"><a href="#Dealing-with-multiple-files-simultaneously" class="headerlink" title="Dealing with multiple files simultaneously"></a>Dealing with multiple files simultaneously</h3><p>We can read several data files at the same time and then plot them into one picture.<br>For example, if we have three data files, each of them corresponds to one parameter <em>d</em>, which could be 2, 3 or 4.<br>The data file for <em>d = 2</em> is stored in <strong>data_d2.dat</strong> and it contains the following data:</p><!-- if the above link doesn't work, use the following command --><p><img src="/2017/03/30/How-to-use-pgfplots-in-LaTeX/3.png" alt="Picture 1"></p><p>The other files are similar.</p><p>If we wnat to produce a loglog plot, the following commands can make this happen:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;tikzpicture&#125;</span><br><span class="line">\begin&#123;loglogaxis&#125;[</span><br><span class="line">  title = &#123;Convergence Plot&#125;,</span><br><span class="line">  xlabel = &#123;Degrees of freedom&#125;,</span><br><span class="line">  ylabel = &#123;$L_2$ Error&#125;,</span><br><span class="line">  grid = major,</span><br><span class="line">  legend entries = &#123;$d=2$, $d=3$, $d = 4$&#125;,]</span><br><span class="line">  \addplot table &#123;data_d2.dat&#125;;</span><br><span class="line">  \addplot table &#123;data_d3.dat&#125;;</span><br><span class="line">  \addplot table &#123;data_d4.dat&#125;;</span><br><span class="line">\end&#123;loglogaxis&#125;</span><br><span class="line">\end&#123;tikzpicture&#125;</span><br></pre></td></tr></table></figure><p>Here is the result:</p><!-- if the above link doesn't work, use the following command --><p><img src="/2017/03/30/How-to-use-pgfplots-in-LaTeX/4.png" alt="Picture 1"></p><p><strong>REMARK:</strong></p><ul><li>We used <code>\begin&#123;loglogaxis&#125;</code> instead of <code>\begin&#123;axis&#125;</code> in order to configure logarithmic scales on both axes.</li><li>The plot contains grid lines since we used the <code>grid = major</code> key.</li><li>A legend can be provided for one or more <code>\addplot</code> statements using the <code>legend entries</code> key.</li><li><code>pgfplots</code> accepts more than one <code>\addplot ... ;</code> command, so we can just add our remaining data files.</li><li>We do not need to worry about the line styles, since <code>pgfplots</code> will automatically choose styles for that specific plot.</li></ul><h3 id="3D-Scatter-Plots"><a href="#3D-Scatter-Plots" class="headerlink" title="3D Scatter Plots"></a>3D Scatter Plots</h3><p>This is similar to two dimensional plot.<br>For example, if we have a file called <code>data_3d.dat</code> which contains the following data:</p><!-- if the above link doesn't work, use the following command --><p><img src="/2017/03/30/How-to-use-pgfplots-in-LaTeX/5.png" alt="Picture 1"></p><p>Using the below commands can obtain the desired plot:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;tikzpicture&#125;</span><br><span class="line">\begin&#123;axis&#125;[</span><br><span class="line">  xlabel = $x$,</span><br><span class="line">  ylabel = $y$,</span><br><span class="line">  zlabel = &#123;$f(x,y) = x \cdot y$&#125;,</span><br><span class="line">  title = &#123;A Scatter Plot Example&#125;,]</span><br><span class="line">  \addplot3+[only marks, scatter] table &#123;data_3d.dat&#125;;</span><br><span class="line">\end&#123;axis&#125;</span><br><span class="line">\end&#123;tikzpicture&#125;</span><br></pre></td></tr></table></figure><!-- if the above link doesn't work, use the following command --><p><img src="/2017/03/30/How-to-use-pgfplots-in-LaTeX/6.png" alt="Picture 1"></p><p><strong>REMARK:</strong></p><ul><li>The <code>\addplot3</code> command is the main interface for any three dimensional plot.</li><li><code>only marks</code> places the current plot <em>mark</em> at each input position.</li><li>If we add the key <code>scatter</code>, the plot mark will also use the colors of the current <code>colormap</code>.</li></ul><h2 id="Plotting-data-from-csv-files-in-LaTeX"><a href="#Plotting-data-from-csv-files-in-LaTeX" class="headerlink" title="Plotting data from .csv files in LaTeX"></a>Plotting data from <code>.csv</code> files in LaTeX</h2><p>Similar to <code>.dat</code> file, we can also use <code>\addplot table</code> to import data from <code>.csv</code> file. Let’s use the previos skills to deal with a relatively more complex example.</p><p>Here is data from <code>data.csv</code> file:</p><table><thead><tr><th>people</th><th>probability</th></tr></thead><tbody><tr><td>0</td><td>0.000000</td></tr><tr><td>1</td><td>0.000000</td></tr><tr><td>2</td><td>0.002740</td></tr><tr><td>3</td><td>0.008204</td></tr><tr><td>4</td><td>0.016356</td></tr><tr><td>5</td><td>0.027136</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><p>Then the following commands can help us obtain the below plot:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;tikzpicture&#125;</span><br><span class="line">\begin&#123;axis&#125;[</span><br><span class="line">  width=15cm, height=8cm,  % size of the image</span><br><span class="line">  grid = major,</span><br><span class="line">  grid style = &#123;dashed, gray!30&#125;,</span><br><span class="line">  % xmode=log,log basis x=10,</span><br><span class="line">  % ymode=log,log basis y=10,</span><br><span class="line">  xmin = 0,   % start the diagram at this x-coordinate</span><br><span class="line">  xmax = 62,  % end   the diagram at this x-coordinate</span><br><span class="line">  ymin = 0,   % start the diagram at this y-coordinate</span><br><span class="line">  ymax = 1.1, % end   the diagram at this y-coordinate</span><br><span class="line">  /pgfplots/xtick = &#123;0,5,...,60&#125;,  % make steps of length 5</span><br><span class="line">  extra x ticks = &#123;23&#125;,</span><br><span class="line">  extra y ticks = &#123;0.507297&#125;,</span><br><span class="line">  axis background/.style = &#123;fill=white&#125;,</span><br><span class="line">  ylabel = &#123;probability of at least one birthday-collision&#125;,</span><br><span class="line">  xlabel = &#123;people&#125;,</span><br><span class="line">  tick align = outside,]</span><br><span class="line">  </span><br><span class="line">  % import the correct data from a CSV file</span><br><span class="line">  \addplot table &#123;data.csv&#125;;</span><br><span class="line"></span><br><span class="line">  % mark x=23</span><br><span class="line">  \coordinate (a) at (axis cs:23, 0.507297);</span><br><span class="line">  \draw[blue, dashed, thick](a -| current plot begin) -- (a);</span><br><span class="line">  \draw[blue, dashed, thick](a |- current plot begin) -- (a);</span><br><span class="line"></span><br><span class="line">  % plot the stirling-formulae</span><br><span class="line">  \addplot[domain=0:60, red, thick] &#123;1-(365/(365-x))^(365.5-x)*e^(-x)&#125;; </span><br><span class="line">\end&#123;axis&#125; </span><br><span class="line">\end&#123;tikzpicture&#125;</span><br></pre></td></tr></table></figure><!-- if the above link doesn't work, use the following command --><p><img src="/2017/03/30/How-to-use-pgfplots-in-LaTeX/7.png" alt="Picture 1"></p><p>For more details about the package <code>pgfplots</code>, please download the pdf tutorial <a href="http://sourceforge.net/projects/pgfplots">Manual for Package PGFPLOTS</a> as a reference.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Before we start, the following packages and command are useful:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;\usepackage&amp;#123;tikz&amp;#125; % To generate the plot from csv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\usepackage&amp;#123;pgfplots&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\pgfplotsset&amp;#123;compat=1.5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Plotting-data-from-dat-files-in-LaTeX&quot;&gt;&lt;a href=&quot;#Plotting-data-from-dat-files-in-LaTeX&quot; class=&quot;headerlink&quot; title=&quot;Plotting data from .dat files in LaTeX&quot;&gt;&lt;/a&gt;Plotting data from &lt;code&gt;.dat&lt;/code&gt; files in LaTeX&lt;/h2&gt;&lt;h3 id=&quot;Using-addplot-table&quot;&gt;&lt;a href=&quot;#Using-addplot-table&quot; class=&quot;headerlink&quot; title=&quot;Using \addplot table&quot;&gt;&lt;/a&gt;Using &lt;code&gt;\addplot table&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;Ploting data directly from a &lt;code&gt;.dat&lt;/code&gt; file. For example, if a file called &lt;code&gt;data.dat&lt;/code&gt; has the data table shown as follows:&lt;/p&gt;</summary>
    
    
    
    <category term="LaTeX" scheme="https://cnxiekun.github.io/categories/LaTeX/"/>
    
    
    <category term="LaTeX" scheme="https://cnxiekun.github.io/tags/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title>How to work with git</title>
    <link href="https://cnxiekun.github.io/2017/03/30/How-to-work-with-git/"/>
    <id>https://cnxiekun.github.io/2017/03/30/How-to-work-with-git/</id>
    <published>2017-03-30T05:56:35.000Z</published>
    <updated>2021-07-12T07:17:24.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Installing-Git-on-Mac-OS"><a href="#Installing-Git-on-Mac-OS" class="headerlink" title="Installing Git on Mac OS"></a>Installing Git on Mac OS</h2><p>On Mac OS X, a one-click installer package is available that can be downloaded from here: <a href="https://code.google.com/p/git-osx-installer/downloads/list?can=3">link</a></p><p>Once this is installed, you can jump right into Git by starting “Terminal.app” on your Mac.</p><h2 id="Configuring-Git"><a href="#Configuring-Git" class="headerlink" title="Configuring Git"></a>Configuring Git</h2><p>A couple of very basic configurations should be made before you get started. For example, set your name and email address as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;cnxiekun&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;cnxiekun@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Create-a-local-repository"><a href="#Create-a-local-repository" class="headerlink" title="Create a local repository"></a>Create a local repository</h2><p>you can use the following commands to create an empty local repository:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> path/to/project/folder</span><br><span class="line">$ git init</span><br></pre></td></tr></table></figure><p>Now look at the files in that directory (including any hidden files):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -la</span><br></pre></td></tr></table></figure><p>You’ll see that a new, hidden folder was added, named “.git”. </p><h2 id="Clone-a-remote-repository"><a href="#Clone-a-remote-repository" class="headerlink" title="Clone a remote repository"></a>Clone a remote repository</h2><p>you can get access to a remote repository on a server by using “git clone” command, for example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your/development/folder/</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/gittower/git-crash-course.git</span><br></pre></td></tr></table></figure><p>On doing this, Git will now download a complete copy of this repository to your local disk - on condition that you’re allowed to access this repository.</p><h2 id="Working-on-a-project"><a href="#Working-on-a-project" class="headerlink" title="Working on a project"></a>Working on a project</h2><h3 id="Staging-area"><a href="#Staging-area" class="headerlink" title="Staging area"></a>Staging area</h3><p>In Git, simply making some changes doesn’t mean they’re automatically committed to the local repository. The staging area allows you to determine which of your local changes shall be committed. </p><p>You can stage some changes with the “git add” command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add new-page.html index.html css/*</span><br></pre></td></tr></table></figure><p>With this command, we added the new “new-page.html” file, the modifications in “index.html”, and all the changes in the “css” folder to the Staging Area. </p><p>If you want to record the removal of some file in the next commit, you may use</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>You can also see what you’ve changed since your last commit using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><h3 id="Committing-changes"><a href="#Committing-changes" class="headerlink" title="Committing changes"></a>Committing changes</h3><p>Now you are ready to commit changes to local repository. The following command wraps up your changes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m <span class="string">&quot;First commit&quot;</span></span><br></pre></td></tr></table></figure><p>the commit message after “-m” is usually a short summary of your changes (up to 50 characters as a guideline). It will make it easier to understand what happened for you, as well as your teammates.</p><p>The following command is used to display the project’s commit history:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> </span><br></pre></td></tr></table></figure><h3 id="Branching-and-Merging"><a href="#Branching-and-Merging" class="headerlink" title="Branching and Merging"></a>Branching and Merging</h3><p>You are always working on a certain branch (the currently active, or “checked out”, or “HEAD” branch). “git status”<br>will show you which branch is HEAD in its first line. The default is “master”.</p><p>You can create a new branch using </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch newfeature</span><br></pre></td></tr></table></figure><p>Now there exists two branches, namely “master” and “newfeature”. You may switch to the new branch using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout newfeature</span><br></pre></td></tr></table></figure><p>Running “git status”, you’ll see the HEAD is now “newfeature”. Now you can work on this new branch, with<br>any other branches unaffected. </p><p>You can merge the changes from the new branch into “master” using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line">$ git merge newfeature</span><br></pre></td></tr></table></figure><h2 id="Share-work-via-remote-repository"><a href="#Share-work-via-remote-repository" class="headerlink" title="Share work via remote repository"></a>Share work via remote repository</h2><p>Suppose you are connected to a remote repository “origin”. You may integrate the remote changes into local repository using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin</span><br></pre></td></tr></table></figure><p>or directly integrates them into your working copy using</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure><p>It’s actually a “fetch” command (which only downloads data) and a “merge” command (which integrates this data into your working copy) combined.</p><p>in case no tracking connection was established for your local HEAD branch, you will have to tell Git from which remote repository and which remote branch you want to pull (“git pull origin master”, e.g.)</p><p>The following command uploads all the new commits from our current HEAD branch to its remote counterpart branch:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push</span><br></pre></td></tr></table></figure><p>That’s it, enjoy it!</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Installing-Git-on-Mac-OS&quot;&gt;&lt;a href=&quot;#Installing-Git-on-Mac-OS&quot; class=&quot;headerlink&quot; title=&quot;Installing Git on Mac OS&quot;&gt;&lt;/a&gt;Installing Git on Mac OS&lt;/h2&gt;&lt;p&gt;On Mac OS X, a one-click installer package is available that can be downloaded from here: &lt;a href=&quot;https://code.google.com/p/git-osx-installer/downloads/list?can=3&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once this is installed, you can jump right into Git by starting “Terminal.app” on your Mac.&lt;/p&gt;
&lt;h2 id=&quot;Configuring-Git&quot;&gt;&lt;a href=&quot;#Configuring-Git&quot; class=&quot;headerlink&quot; title=&quot;Configuring Git&quot;&gt;&lt;/a&gt;Configuring Git&lt;/h2&gt;&lt;p&gt;A couple of very basic configurations should be made before you get started. For example, set your name and email address as follows:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&amp;quot;cnxiekun&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&amp;quot;cnxiekun@gmail.com&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Technique" scheme="https://cnxiekun.github.io/categories/Technique/"/>
    
    
    <category term="Git" scheme="https://cnxiekun.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>How to run Jupyter Notebook on Server</title>
    <link href="https://cnxiekun.github.io/2017/03/29/How-to-run-Jupyter-Notebook-on-Server/"/>
    <id>https://cnxiekun.github.io/2017/03/29/How-to-run-Jupyter-Notebook-on-Server/</id>
    <published>2017-03-28T19:43:27.000Z</published>
    <updated>2021-07-12T07:17:24.784Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Access-to-Server-e-g-Pascal"><a href="#Access-to-Server-e-g-Pascal" class="headerlink" title="Access to Server (e.g., Pascal)"></a>Access to Server (e.g., Pascal)</h3><p>Open terminal and use your account and password to log in the server, e.g.,</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh your_account_name<span class="variable">@pascal</span>.ieda.ust.hk</span><br></pre></td></tr></table></figure><p>Then enter your password.</p><h3 id="Create-a-notebook-configuration-file"><a href="#Create-a-notebook-configuration-file" class="headerlink" title="Create a notebook configuration file"></a>Create a notebook configuration file</h3><p>Use the following command to generate <code>jupyter_notebook_config.py</code>, whose default parent directory is <code>~/.jupyter</code>, if you don’t have one:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter notebook --<span class="keyword">generate</span>-<span class="keyword">config</span></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="Generate-a-hased-password"><a href="#Generate-a-hased-password" class="headerlink" title="Generate a hased password"></a>Generate a hased password</h3><p>Open Python from terminal and use the following commands to obtain your <em>hashed password</em>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> notebook.auth <span class="keyword">import</span> passwd</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>passwd()</span><br><span class="line">Enter password:</span><br><span class="line">Verrfy password:</span><br><span class="line"><span class="string">&#x27;sha1:xxx...&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ctrl+z</span><br></pre></td></tr></table></figure><p>Remember your hashed password for later use.</p><h3 id="Use-SSL-for-security"><a href="#Use-SSL-for-security" class="headerlink" title="Use SSL for security"></a>Use SSL for security</h3><p>You can secure the connection  (<code>https://</code>) using a self-sighed certificate:</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -x509 -nodes -days <span class="number">365</span> -<span class="keyword">new</span><span class="type">key</span> rsa:<span class="type">1024 -keyout mykey</span>.key -out mycert.pem</span><br></pre></td></tr></table></figure><p>This command requires you to enter some personal information and one password for future use (login the Maxwell on your laptop, browser password). It would also generate two files <code>mykey.key</code> and <code>mycert.pem</code> in the current directory, for later use.</p><h3 id="Run-a-public-notebook-server"><a href="#Run-a-public-notebook-server" class="headerlink" title="Run a public notebook server"></a>Run a public notebook server</h3><p>This step would let you access notebook on maxwell via a web browser. Open the configuration file via following command:</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~<span class="regexp">/.jupyter/</span>jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><p>Find the following lines, make corresponding changes and uncomment them:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## The full path to an SSL/TLS certificate file.</span></span><br><span class="line">c.NotebookApp.certfile = <span class="string">u&#x27;./mycert.pem&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## The IP address the notebook server will listen on.</span></span><br><span class="line">c.NotebookApp.ip = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## The full path to a private key file for usage with SSL/TLS.</span></span><br><span class="line">c.NotebookApp.keyfile = <span class="string">u&#x27;./mykey.key&#x27;</span></span><br><span class="line"></span><br><span class="line">c.NotebookApp.password = <span class="string">u&#x27;sha1:xxx...&lt;your hashed password&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">c.NotebookApp.open_browser = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## The port the notebook server will listen on.</span></span><br><span class="line">c.NotebookApp.port = <span class="number">9999</span></span><br></pre></td></tr></table></figure><p>Save and exit.</p><p>After above settings, you can start the notebook using the <code>jupyter notebook</code> command. Open your browser, e.g, <code>Safari</code>, go to</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//pascal.ieda.ust.hk:&lt;your port&gt;</span></span><br></pre></td></tr></table></figure><p>It needs your password to enter (browser password created via SSL).</p><h3 id="Remark"><a href="#Remark" class="headerlink" title="Remark"></a>Remark</h3><ol><li><p>The default location of <code>mycert.pem</code> and <code>mykey.key</code> is in the home directory <code>~/</code>if you use the above seeting. Acturally, you can move them to other directory, e.g., <code>~/.jupyter/</code>, then edit the addresses of <code>certfile</code> and <code>keyfile</code> in configuration file (see above).</p></li><li><p>You can use <code>nohup</code> command if you still want to use the notebook on Maxwell after you close the notebook terminal window, e.g,</p></li></ol>  <figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup jupyter notebook &gt; <span class="built_in">log</span> <span class="meta">&amp;</span></span><br></pre></td></tr></table></figure><p>  Adcanced:<br>  <figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup jupyter notebook &gt; <span class="regexp">/dev/</span><span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><br>  Note: you can also rename the config file, e.g., <code>myconfig.py</code>, then modify above nohup command as follows<br>  <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup jupyter notebook --config=<span class="regexp">/home/</span>kxie@HKUST<span class="regexp">/.jupyter/my</span>config.py &gt; <span class="regexp">/dev/</span><span class="keyword">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure></p><ol start="3"><li>If you want to kill it later, use <code>kill $(pgrep jupyter)</code>. Or use commend <code>netstat -tulnp</code> to check the Jupyter process, then <code>kill -9 PID</code>.</li></ol><p>That’s it, enjoy your notebook on your server.</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Access-to-Server-e-g-Pascal&quot;&gt;&lt;a href=&quot;#Access-to-Server-e-g-Pascal&quot; class=&quot;headerlink&quot; title=&quot;Access to Server (e.g., Pascal)&quot;&gt;&lt;/a&gt;Access to Server (e.g., Pascal)&lt;/h3&gt;&lt;p&gt;Open terminal and use your account and password to log in the server, e.g.,&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ssh your_account_name&lt;span class=&quot;variable&quot;&gt;@pascal&lt;/span&gt;.ieda.ust.hk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Then enter your password.&lt;/p&gt;
&lt;h3 id=&quot;Create-a-notebook-configuration-file&quot;&gt;&lt;a href=&quot;#Create-a-notebook-configuration-file&quot; class=&quot;headerlink&quot; title=&quot;Create a notebook configuration file&quot;&gt;&lt;/a&gt;Create a notebook configuration file&lt;/h3&gt;&lt;p&gt;Use the following command to generate &lt;code&gt;jupyter_notebook_config.py&lt;/code&gt;, whose default parent directory is &lt;code&gt;~/.jupyter&lt;/code&gt;, if you don’t have one:&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jupyter notebook --&lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Technique" scheme="https://cnxiekun.github.io/categories/Technique/"/>
    
    
    <category term="Python" scheme="https://cnxiekun.github.io/tags/Python/"/>
    
    <category term="Server" scheme="https://cnxiekun.github.io/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>Pandas v.s. SFrame</title>
    <link href="https://cnxiekun.github.io/2017/03/27/Pandas-v-s-SFrame/"/>
    <id>https://cnxiekun.github.io/2017/03/27/Pandas-v-s-SFrame/</id>
    <published>2017-03-27T15:59:38.000Z</published>
    <updated>2021-07-12T07:17:24.784Z</updated>
    
    <content type="html"><![CDATA[<p>Which one is better for data manipulation in python: Pandas or SFrame?</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h2><ul><li>Pandas is an independent Python package (Pandas stands for Python Data Analysis)</li><li>SFrames (short for Scalable Frames) are part of the bigger ecosystem of Graphlab Create</li></ul><h2 id="Licensing-and-Fees"><a href="#Licensing-and-Fees" class="headerlink" title="Licensing and Fees:"></a>Licensing and Fees:</h2><ul><li>You can use Pandas in commercial applications without any fee</li><li>You need to buy a license to use Graphlab Create SFrames for commercial use. SFrame is open source now.</li></ul><span id="more"></span><h2 id="Scalability"><a href="#Scalability" class="headerlink" title="Scalability:"></a><em>Scalability</em>:</h2><ul><li>Pandas is an in-memory data structure. This means you can usually not store data frames bigger than the main memory (aka RAM) on your machine</li><li>SFrame is an out-of-core data structure. This means you can virtually store any size dataframe as long as you do not run out of both disk space and memory</li><li>SFrame must be able to handle large amounts of data compared to Pandas, but must be slower in performance compared to Pandas.</li><li> SFrame is for solid-state hard-drives. You can scale with speed. - Pandas is if you want to work only with RAM. You can use SFrame with normal hard-drives as well but speed would be very low.</li></ul><h2 id="Library-Dependencies"><a href="#Library-Dependencies" class="headerlink" title="Library Dependencies:"></a>Library Dependencies:</h2><ul><li>Pandas does not need any other package to store data. You can not do much data modelling using Pandas, you will need scikit learn or other packages from the Anaconda Python Distribution</li><li>SFrame is closely coupled with Graphlab Create and hence, you will not need to setup or install anything if you are using Graphlab Create. It is self sufficient for most tasks</li></ul><h2 id="Language-and-Machine-Dependencies"><a href="#Language-and-Machine-Dependencies" class="headerlink" title="Language and Machine Dependencies:"></a>Language and Machine Dependencies:</h2><ul><li>Pandas, to the best of my knowledge, works in both 32 bit and 64 bit machines</li><li>SFrame works only in 64 bit machines.</li><li>Pandas works with both Python 2.x and 3.x</li><li>SFrame works with only Python 2.7</li></ul><p>Owing to licensing fees and some other less important reasons, most users have not tried Graphlab Create. Thereby, we do not appreciate the immense power from the Graphlab Create python stack.</p><p>What should you learn?</p><p>If you are a beginner, start with Pandas and the Anaconda python distribution (which includes scikit learn, numpy, scipy, matplotlib, flask etc.). I recommend Pandas because there are much more tutorials and StackOverflow answers available in comparison.</p><p>But please do keep in mind, that just because most brilliant people have not tried Graphlab Create does not make it a bad tool. Use the tool that works for you the best.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Which one is better for data manipulation in python: Pandas or SFrame?&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction:&quot;&gt;&lt;/a&gt;Introduction:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Pandas is an independent Python package (Pandas stands for Python Data Analysis)&lt;/li&gt;
&lt;li&gt;SFrames (short for Scalable Frames) are part of the bigger ecosystem of Graphlab Create&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Licensing-and-Fees&quot;&gt;&lt;a href=&quot;#Licensing-and-Fees&quot; class=&quot;headerlink&quot; title=&quot;Licensing and Fees:&quot;&gt;&lt;/a&gt;Licensing and Fees:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;You can use Pandas in commercial applications without any fee&lt;/li&gt;
&lt;li&gt;You need to buy a license to use Graphlab Create SFrames for commercial use. SFrame is open source now.&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Technique" scheme="https://cnxiekun.github.io/categories/Technique/"/>
    
    
    <category term="Python" scheme="https://cnxiekun.github.io/tags/Python/"/>
    
    <category term="Pandas" scheme="https://cnxiekun.github.io/tags/Pandas/"/>
    
    <category term="SFrame" scheme="https://cnxiekun.github.io/tags/SFrame/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 搭建博客</title>
    <link href="https://cnxiekun.github.io/2017/03/26/Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://cnxiekun.github.io/2017/03/26/Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2017-03-25T16:00:00.000Z</published>
    <updated>2021-07-12T07:17:24.783Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/">Hexo</a> 集简洁大方美观与一体！</p><h2 id="必要的环境配置"><a href="#必要的环境配置" class="headerlink" title="必要的环境配置"></a>必要的环境配置</h2><h3 id="安装-homebrew"><a href="#安装-homebrew" class="headerlink" title="安装 homebrew"></a>安装 <a href="http://brew.sh/index_zh-cn.html">homebrew</a></h3><p>打开 terminal，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装-Node"><a href="#安装-Node" class="headerlink" title="安装 Node"></a>安装 Node</h3><p>使用 <a href="http://brew.sh/index_zh-cn.html">homebrew</a> 安装，<code>brew install node</code> 一键搞定。</p><p><code>node.js</code> 安装完成后，<code>npm</code> 也安装了。</p><span id="more"></span><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 <a href="https://git-scm.com/">Git</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo brew install git</span><br></pre></td></tr></table></figure><h3 id="配置-GitHub"><a href="#配置-GitHub" class="headerlink" title="配置 GitHub"></a>配置 <a href="https://github.com/">GitHub</a></h3><p>使用 GitHub Page 搭建博客, 需要遵循一定的规则, 需要在 github 建立仓库,仓库名为 <code>username.github.io</code>, 更多详情请参考<a href="https://pages.github.com/">官方文档</a>.</p><p>我想大部分想用 Hexo 创建博客的人都会有吧，可以跳过这一步。</p><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 <a href="https://hexo.io/">Hexo</a></h3><ul><li><p>安装</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir hexo <span class="comment"># 创建名为 hexo 的文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install hexo --save</span><br></pre></td></tr></table></figure></li><li><p>部署 Hexo：初始化</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>安装 Hexo 插件：生成 sitemap，Rss，部署到 git 等</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-archive --save</span><br><span class="line">$ npm install hexo-generator-category --save</span><br><span class="line">$ npm install hexo-generator-tag --save</span><br><span class="line">$ npm install hexo-server --save</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ npm install hexo-deployer-heroku --save</span><br><span class="line">$ npm install hexo-deployer-rsync --save</span><br><span class="line">$ npm install hexo-deployer-openshift --save</span><br><span class="line">$ npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">$ npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">$ npm install hexo-generator-feed@1 --save</span><br><span class="line">$ npm install hexo-generator-sitemap@1 --save</span><br><span class="line"> $ npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li></ul><h2 id="来-Hexo-吧"><a href="#来-Hexo-吧" class="headerlink" title="来 Hexo 吧"></a>来 Hexo 吧</h2><h3 id="创建新博文"><a href="#创建新博文" class="headerlink" title="创建新博文"></a>创建新博文</h3><p>执行 new 命令，生成制定名称的文章至 <code>hexo\source_posts\postName.md</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] <span class="string">&quot;postName&quot;</span> <span class="comment"># 新建文章</span></span><br></pre></td></tr></table></figure><p>其中 <code>layout</code> 是可选参数，默认值为 <code>post</code>。有哪些 <code>layout</code>呢，请到 <code>scaffolds</code>目录下查看，这些文件名称就是 <code>layout</code>名称。当然你可以添加自己的 <code>layout</code>，方法就是添加一个文件即可，同时你也可以编辑现有的 <code>layout</code>，比如 <code>post</code> 的 <code>layout</code>默认是<code>hexo\scaffolds\post.md</code>。</p><p>可以修该默认的 <code>post</code> 格式，例如添加 <code>categories</code>/<code>description</code>，以避免每次手动输入，只需修改 <code>hexo\scaffolds\posts.md</code> 文件，如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>更多信息参考：<a href="https://hexo.io/docs/writing.html">Writing</a></p><p>接下来，你就可以用喜爱的编辑器尽情书写你的文章。</p><p>对于文章摘要，在需要显示摘要的地方（Markdown 文件中）添加如下代码即可：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p><code>more</code> 以上内容即是文章摘要，在主页显示，<code>more</code> 以下内容点击 <code>Read More</code> 链接打开全文才显示。</p><h3 id="生成静态站点文件"><a href="#生成静态站点文件" class="headerlink" title="生成静态站点文件"></a>生成静态站点文件</h3><p>执行如下命令，生成静态页面至 <code>hexo\public\</code> 目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>参考：<a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h3><p>执行如下命令，启动本地服务，进行文章预览调试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>然后浏览器输入 <code>http://localhost:4000</code> 就可以看见效果。</p><p>参考：<a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="部署到-Git"><a href="#部署到-Git" class="headerlink" title="部署到 Git"></a>部署到 Git</h3><p>请注意这一步很重要：需要修改主目录（<code>hexo\</code>）下的 <code>_config.yml</code> 文件。</p><p>添加如下内容：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">type:</span> git</span><br><span class="line"><span class="symbol">reposotory:</span> git:github.com:<span class="params">&lt;your github name&gt;</span>/<span class="params">&lt;your github name&gt;</span>.github.io.git</span><br><span class="line"><span class="symbol">branch:</span> master</span><br></pre></td></tr></table></figure><p>需要注意的是：每个 <code>:</code> 后面必须有一个空格！</p><p>然后 terminal 输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>参考：<a href="https://hexo.io/docs/deployment.html">Deployment</a></p><h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><p>该博客采用 iissnan 的 <a href="http://theme-next.iissnan.com/">Next</a> 主题，他的博客有详细的安装教程，有需要的朋友直接参考他写的教程，一气呵成!</p><h4 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h4 id="应用-Hexo-主题"><a href="#应用-Hexo-主题" class="headerlink" title="应用 Hexo 主题"></a>应用 Hexo 主题</h4><p>在 <code>hexo</code> 目录下找到 <code>_config.yml</code> 配置文件，找到 <code>theme</code> 字段，并将其值更改为<br><code>next</code>，如下所示：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">theme:</span> <span class="keyword">next</span></span><br></pre></td></tr></table></figure><h4 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h4><p><code>GitHub Pages</code> 自定义404页面非常容易，直接在 <code>themes\next\source</code>目录下创建自己的 <code>404.html</code> 就可以，内容自己写。</p><h3 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h3><p>执行如下 <code>new page</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">&quot;about&quot;</span></span><br><span class="line">$ hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>在 <code>hexo\source\</code> 下生成 <code>about</code> 和 <code>categories</code> 目录，里面均有个 <code>index.md</code> 文件。</p><p>当然了，上述步骤也可以手动生成，效果完全等价。</p><h3 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h3><p>请参考 <code>Next</code> 官方网站详细的说明文档：</p><ul><li><a href="http://theme-next.iissnan.com/getting-started.html">开始使用</a></li><li><a href="http://theme-next.iissnan.com/theme-settings.html">主题配置</a></li><li><a href="http://theme-next.iissnan.com/third-party-services.html">第三方服务</a></li><li><a href="http://theme-next.iissnan.com/tag-plugins.html">内建标签</a></li><li><a href="http://theme-next.iissnan.com/advanced-settings.html">进阶设定</a></li><li><a href="http://theme-next.iissnan.com/faqs.html">常见问题</a></li></ul><p>最后附上我的两个 <code>_config.yml</code> 配置文件，仅供参考。</p><p>主目录下的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Kun&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">Stay</span> <span class="string">Hungry,</span> <span class="string">Stay</span> <span class="string">Foolish</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Kun</span> <span class="string">XIE</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.jif</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">cnxiekun@gmail.com</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://cnxiekun.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Comment</span></span><br><span class="line"><span class="comment"># disqus_shortname: cnxiekun</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;v&#x27;</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">false</span> </span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> </span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:cnxiekun/cnxiekun.github.io.git</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">git@git.coding.net:cnxiekun/cnxiekun.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p><code>Next</code> 主题目录下的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">images/favicon.ico</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set default keywords (Use a comma to separate)</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&quot;Hexo&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site&#x27;s feed link.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify the date when the site was setup</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2017</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml</span></span><br><span class="line">  <span class="comment">#commonweal: /404.html</span></span><br><span class="line"></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="comment"># Icon Mapping:</span></span><br><span class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="comment">#   Key is the name of menu item and value is the name of FontAwesome icon. Key is case-senstive.</span></span><br><span class="line"><span class="comment">#   When an question mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">calendar</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">archive</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">sitemap</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">heartbeat</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment"># scheme: Muse</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/cnxiekun</span></span><br><span class="line">  <span class="attr">Weibo:</span> <span class="string">http://weibo.com/1740393132</span></span><br><span class="line">  <span class="comment">#LinkLabel: Link</span></span><br><span class="line">  <span class="comment">#Zhihu: Link</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links Icons</span></span><br><span class="line"><span class="comment"># Icon Mapping:</span></span><br><span class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="comment">#   Key is the name of the item and value is the name of FontAwesome icon. Key is case-senstive.</span></span><br><span class="line"><span class="comment">#   When an globe mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Icon Mappings.</span></span><br><span class="line">  <span class="comment"># KeyMapsToSocialItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">github</span></span><br><span class="line">  <span class="comment"># Twitter: twitter</span></span><br><span class="line">  <span class="attr">Weibo:</span> <span class="string">weibo</span></span><br><span class="line">  <span class="comment"># Zhihu: battery-3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.jpg</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.jpg</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.gif</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Table Of Contents in the Sidebar</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position, available value: left | right</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display, available value:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span></span><br><span class="line">  <span class="comment">#display: always</span></span><br><span class="line">  <span class="comment">#display: hide</span></span><br><span class="line">  <span class="comment">#display: remove</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels.</span></span><br><span class="line">  <span class="attr">offset:</span> <span class="number">12</span></span><br><span class="line">  <span class="attr">offset_float:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Back to top in sidebar</span></span><br><span class="line">  <span class="attr">b2t:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">word_count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Misc Theme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom Logo.</span></span><br><span class="line"><span class="comment"># !!Only available for Default Scheme currently.</span></span><br><span class="line"><span class="comment"># Options:</span></span><br><span class="line"><span class="comment">#   enabled: [true/false] - Replace with specific image</span></span><br><span class="line"><span class="comment">#   image: url-of-image   - Images&#x27;s url</span></span><br><span class="line"><span class="attr">custom_logo:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">/images/Avatar.jpg</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line"><span class="comment"># highlight_theme: night bright</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Third Party Services Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#! ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#! DO NOT EDIT THE FOLLOWING SETTINGS</span></span><br><span class="line"><span class="comment">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span></span><br><span class="line"><span class="comment">#! ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Motion</span></span><br><span class="line"><span class="attr">use_motion:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fancybox</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Assets</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">images:</span> <span class="string">images</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme version</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">5.1</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>我的 <code>Hexo</code> 源代码（包括 <code>Next</code> 主题）都托管在了 <a href="https://github.com/cnxiekun/cnxiekun.github.io">GitHub</a>，欢迎 fork，仅需修改少量设置即可使用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt; 集简洁大方美观与一体！&lt;/p&gt;
&lt;h2 id=&quot;必要的环境配置&quot;&gt;&lt;a href=&quot;#必要的环境配置&quot; class=&quot;headerlink&quot; title=&quot;必要的环境配置&quot;&gt;&lt;/a&gt;必要的环境配置&lt;/h2&gt;&lt;h3 id=&quot;安装-homebrew&quot;&gt;&lt;a href=&quot;#安装-homebrew&quot; class=&quot;headerlink&quot; title=&quot;安装 homebrew&quot;&gt;&lt;/a&gt;安装 &lt;a href=&quot;http://brew.sh/index_zh-cn.html&quot;&gt;homebrew&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;打开 terminal，输入以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ruby -e &lt;span class=&quot;string&quot;&gt;&amp;quot;&lt;span class=&quot;subst&quot;&gt;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;安装-Node&quot;&gt;&lt;a href=&quot;#安装-Node&quot; class=&quot;headerlink&quot; title=&quot;安装 Node&quot;&gt;&lt;/a&gt;安装 Node&lt;/h3&gt;&lt;p&gt;使用 &lt;a href=&quot;http://brew.sh/index_zh-cn.html&quot;&gt;homebrew&lt;/a&gt; 安装，&lt;code&gt;brew install node&lt;/code&gt; 一键搞定。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;node.js&lt;/code&gt; 安装完成后，&lt;code&gt;npm&lt;/code&gt; 也安装了。&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://cnxiekun.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://cnxiekun.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
